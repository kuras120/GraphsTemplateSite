{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/graph/graph.component.html","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/components/dashboard/dashboard.component.css","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/graph/graph.component.css","webpack:///src/app/components/graph/graph.component.ts","webpack:///src/app/components/login/login.component.css","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/navbar/navbar.component.css","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/security/auth.guard.ts","webpack:///src/app/security/error.interceptor.ts","webpack:///src/app/security/jwt.interceptor.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/graph.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","AppModule","declarations","imports","providers","provide","useClass","multi","bootstrap","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","DashboardComponent","graphService","title","query","name","getGraphs","value","list","subscribe","response","graphs","error","console","log","GraphComponent","showXAxis","showYAxis","gradient","showLegend","showXAxisLabel","showYAxisLabel","timeline","colorScheme","domain","resize","width","height","window","innerWidth","view","_event","LoginComponent","formBuilder","route","router","authService","loading","submitted","tokenValue","navigate","loginForm","group","username","required","password","invalid","authenticate","f","controls","NavbarComponent","queryEmitter","clear","location","reload","emit","AuthGuard","next","state","token","providedIn","ErrorInterceptor","request","handle","pipe","err","status","statusText","message","JwtInterceptor","clone","withCredentials","AuthService","http","cookieService","tokenSubject","get","asObservable","post","api","data","set","divided","split","length","obj","header","JSON","parse","atob","payload","signature","GraphService","sort","a","b","lastGraph","forEach","graph","x_label","toLowerCase","y_label","formattedData","tempGraph","Object","assign","output_data","push","key","concat","sub_name","series","description","type","creation_date","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<router-outlet></router-outlet>\\n<!--<button (click)=\\\"makeRequest()\\\">BIG RED BUTTON</button>-->\\n\";","export default \"<app-navbar (queryEmitter)=\\\"setQuery($event)\\\"></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <h1 class=\\\"card-header bg-info text-center w-100\\\">\\n      Welcome to {{ title }}!\\n    </h1>\\n  </div>\\n  <div class=\\\"d-none d-md-flex row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"row\\\">\\n        <h3 class=\\\"text-secondary p-5 m-auto\\\">\\n          Different interesting graphs\\n        </h3>\\n      </div>\\n    </div>\\n    <app-graph *ngFor=\\\"let graph of graphs | filterBy: query\\\" [name] = \\\"graph.name\\\" [subName]=\\\"graph.sub_name\\\"\\n               [type]=\\\"graph.type\\\" [xLabel]=\\\"graph.x_label\\\" [yLabel]=\\\"graph.y_label\\\" [data]=\\\"graph.output_data\\\" class=\\\"col-xl-6 col-12\\\"></app-graph>\\n  </div>\\n  <div class=\\\"d-flex d-md-none\\\">\\n    <div class=\\\"row m-auto\\\">\\n      Sorry, charts available only on wide screen\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <h4 class=\\\"m-auto\\\">\\n    {{ name }}\\n  </h4>\\n</div>\\n<div class=\\\"row px-2 pb-5\\\" [ngSwitch]=\\\"type\\\">\\n  <ngx-charts-line-chart *ngSwitchCase=\\\"'Line'\\\"\\n    [view]=\\\"view\\\"\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"data\\\"\\n    [gradient]=\\\"gradient\\\"\\n    [xAxis]=\\\"showXAxis\\\"\\n    [yAxis]=\\\"showYAxis\\\"\\n    [legend]=\\\"showLegend\\\"\\n    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n    [xAxisLabel]=\\\"xLabel\\\"\\n    [yAxisLabel]=\\\"yLabel\\\"\\n    (window:resize)=\\\"onResize($event)\\\"\\n    (select)=\\\"onSelect($event)\\\">\\n  </ngx-charts-line-chart>\\n  <ngx-charts-bar-vertical *ngSwitchCase=\\\"'Bar-V'\\\"\\n    [view]=\\\"view\\\"\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"data\\\"\\n    [gradient]=\\\"gradient\\\"\\n    [xAxis]=\\\"showXAxis\\\"\\n    [yAxis]=\\\"showYAxis\\\"\\n    [legend]=\\\"showLegend\\\"\\n    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n    [xAxisLabel]=\\\"xLabel\\\"\\n    [yAxisLabel]=\\\"yLabel\\\"\\n    (window:resize)=\\\"onResize($event)\\\"\\n    (select)=\\\"onSelect($event)\\\">\\n  </ngx-charts-bar-vertical>\\n  <ngx-charts-bar-vertical-normalized *ngSwitchCase=\\\"'Bar-V-Norm'\\\"\\n   [view]=\\\"view\\\"\\n   [scheme]=\\\"colorScheme\\\"\\n   [results]=\\\"data\\\"\\n   [gradient]=\\\"gradient\\\"\\n   [xAxis]=\\\"showXAxis\\\"\\n   [yAxis]=\\\"showYAxis\\\"\\n   [legend]=\\\"showLegend\\\"\\n   [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n   [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n   [xAxisLabel]=\\\"xLabel\\\"\\n   [yAxisLabel]=\\\"yLabel\\\"\\n   (window:resize)=\\\"onResize($event)\\\"\\n   (select)=\\\"onSelect($event)\\\">\\n  </ngx-charts-bar-vertical-normalized>\\n  <ngx-charts-bar-horizontal *ngSwitchCase=\\\"'Bar-H'\\\"\\n   [view]=\\\"view\\\"\\n   [scheme]=\\\"colorScheme\\\"\\n   [results]=\\\"data\\\"\\n   [gradient]=\\\"gradient\\\"\\n   [xAxis]=\\\"showXAxis\\\"\\n   [yAxis]=\\\"showYAxis\\\"\\n   [legend]=\\\"showLegend\\\"\\n   [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n   [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n   [xAxisLabel]=\\\"xLabel\\\"\\n   [yAxisLabel]=\\\"yLabel\\\"\\n   (window:resize)=\\\"onResize($event)\\\"\\n   (select)=\\\"onSelect($event)\\\">\\n  </ngx-charts-bar-horizontal>\\n  <ngx-charts-bar-horizontal-normalized *ngSwitchCase=\\\"'Bar-H-Norm'\\\"\\n   [view]=\\\"view\\\"\\n   [scheme]=\\\"colorScheme\\\"\\n   [results]=\\\"data\\\"\\n   [gradient]=\\\"gradient\\\"\\n   [xAxis]=\\\"showXAxis\\\"\\n   [yAxis]=\\\"showYAxis\\\"\\n   [legend]=\\\"showLegend\\\"\\n   [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n   [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n   [xAxisLabel]=\\\"xLabel\\\"\\n   [yAxisLabel]=\\\"yLabel\\\"\\n   (window:resize)=\\\"onResize($event)\\\"\\n   (select)=\\\"onSelect($event)\\\">\\n  </ngx-charts-bar-horizontal-normalized>\\n</div>\\n\";","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"row vh-100 d-flex align-items-center\\\">\\n    <div class=\\\"col-md-6 d-none d-md-block\\\">\\n      <img class=\\\"img-responsive\\\" style=\\\"border-right: 1px solid black\\\"\\n           src=\\\"static/assets/knowgraphs.png\\\" width=\\\"100%\\\" height=\\\"100%\\\" />\\n    </div>\\n    <div class=\\\"col-md-6 col-12\\\">\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"username\\\">Username</label>\\n          <input id=\\\"username\\\" type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n          </div>\\n        </div>\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n          <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n          Login\\n        </button>\\n        <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">*Know Graphs*</a>\\n  <button class=\\\"navbar-toggler collapsed\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n      </li>\\n    </ul>\\n    <input class=\\\"form-control my-2 mr-2\\\" type=\\\"search\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" [(ngModel)]=\\\"query\\\" (ngModelChange)=\\\"onChange($event)\\\">\\n    <button class=\\\"btn btn-outline-dark my-2\\\" (click)=\\\"logout()\\\">Logout</button>\\n  </div>\\n</nav>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit() { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { GraphComponent } from './components/graph/graph.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { JwtInterceptor } from './security/jwt.interceptor';\nimport { ErrorInterceptor } from './security/error.interceptor';\nimport { AppRoutingModule } from './app.routing.module';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    NavbarComponent,\n    GraphComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        NgxChartsModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        FilterPipeModule,\n        HttpClientModule,\n        ReactiveFormsModule\n    ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './security/auth.guard';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n    { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Graph } from 'src/app/models/graph.model';\nimport { GraphService } from 'src/app/services/graph.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  title = 'Graphs Template Site';\n  query = { name: '' };\n  graphs: Graph[];\n\n  constructor(private graphService: GraphService) { }\n\n  ngOnInit() {\n    this.getGraphs();\n  }\n\n  setQuery(value: string) {\n    this.query.name = value;\n  }\n\n  getGraphs() {\n    this.graphService.list().subscribe(\n      response => {\n        this.graphs = response;\n      },\n      error => console.error(error),\n      () => console.log('Graphs loaded')\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyJ9 */\";","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent implements OnInit {\n  \n  @Input()\n  name: string;\n  @Input()\n  subName: string;\n  @Input()\n  type: string;\n  @Input()\n  xLabel: string;\n  @Input()\n  yLabel: string;\n  @Input()\n  data: [];\n\n  view: any[];\n\n  // options for the chart\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  showYAxisLabel = true;\n  timeline = true;\n\n  colorScheme = {\n    domain: ['#9370DB', '#87CEFA', '#FA8072', '#FF7F50', '#90EE90', '#9370DB']\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.resize();\n  }\n\n  resize() {\n    let width: number;\n    let height: number;\n\n    if (window.innerWidth < 1200) {\n      width = window.innerWidth - 25;\n      height = width / 2;\n    } else {\n      width = (window.innerWidth / 2) - 10;\n      height = width / 2;\n    }\n    this.view = [width, height];\n  }\n\n  onResize(_event: any) {\n    this.resize();\n  }\n\n  onSelect(_event: any) {\n    console.log('clicked');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\nimport {first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    if (this.authService.tokenValue) {\n      this.router.navigate(['/']).then();\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) { return; }\n    this.loading = true;\n    this.authService.authenticate(this.f.username.value, this.f.password.value)\n      .subscribe(\n        () => {\n          this.router.navigate(['/']).then();\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\";","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  @Output() queryEmitter = new EventEmitter<string>();\n  query: string;\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  logout() {\n    this.authService.clear();\n    location.reload();\n  }\n\n  onChange(_event: any) {\n    this.queryEmitter.emit(this.query);\n    console.log(this.query);\n  }\n\n  ngOnInit() { }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const token = this.authService.tokenValue;\n    if (token) { return true; }\n    this.router.navigate(['/login']).then();\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401 && this.authService.tokenValue) {\n                this.authService.clear();\n                location.reload();\n            }\n            const error = err.statusText || err.message;\n            return throwError(error);\n        }))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const token = this.authService.tokenValue;\n        if (token) {\n            request = request.clone({ withCredentials: true });\n        }\n        return next.handle(request);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {Token} from '../models/token.model';\nimport { environment } from 'src/environments/environment';\nimport {CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n\n  public token: Observable<string>;\n  private tokenSubject: BehaviorSubject<string>;\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService\n  ) {\n    this.tokenSubject = new BehaviorSubject<string>(cookieService.get('token'));\n    this.token = this.tokenSubject.asObservable();\n  }\n\n  public get tokenValue(): string {\n    return this.tokenSubject.value;\n  }\n\n  public static toObject(token: string): Token {\n    if (token == null) return null;\n    const divided = token.split('.');\n    if (divided.length !== 3) return null;\n    const obj = { } as Token;\n    obj.header = JSON.parse(atob(divided[0]));\n    obj.payload = JSON.parse(atob(divided[1]));\n    obj.signature = divided[2];\n    return obj;\n  }\n\n  authenticate(username: string, password: string): Observable<string> {\n    return this.http.post<any>(`${environment.api}/token/`, { username, password })\n    .pipe(map(data => {\n      this.cookieService.set('token', data.token);\n      this.tokenSubject.next(data.token);\n      return data.token;\n    }));\n  }\n\n  clear() {\n    this.cookieService.delete('token');\n    this.tokenSubject.next(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpHeaders, HttpClient} from '@angular/common/http';\nimport {Graph} from '../models/graph.model';\nimport {environment} from '../../environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphService {\n\n  constructor(private http: HttpClient) { }\n\n  list() {\n    return this.http.get<Graph[]>(`${environment.api}/graphs/`)\n    .pipe(map(response => {\n      const graphs: Graph[] = [];\n      response.sort((a, b) => (a.name > b.name) ? 1 : -1);\n      let lastGraph: Graph = null;\n      response.forEach(graph => {\n        graph.x_label = graph.x_label.toLowerCase();\n        graph.y_label = graph.y_label.toLowerCase();\n        const formattedData = [];\n        graph.data.forEach(data => {\n          const tempGraph = Object.assign({}, graph);\n          tempGraph.data = [];\n          tempGraph.output_data = [];\n          data.graph = tempGraph;\n          formattedData.push({name: data.key, value: data.value});\n        });\n        if (lastGraph != null &&\n            lastGraph.name === graph.name &&\n            lastGraph.x_label === graph.x_label &&\n            lastGraph.y_label === graph.y_label) {\n          lastGraph.data = lastGraph.data.concat(graph.data);\n          lastGraph.output_data.push({name: graph.sub_name, series: formattedData});\n        }\n        else {\n          graphs.push({name: graph.name, sub_name: graph.sub_name, description: graph.description,\n            type: graph.type, x_label: graph.x_label, y_label: graph.y_label, data: graph.data, creation_date: graph.creation_date,\n            output_data: [{name: graph.sub_name, series: formattedData}]});\n        }\n        lastGraph = graphs[graphs.length - 1];\n      });\n      return graphs;\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}